#!/usr/bin/env bash

CUSTOM_WALLPAPERS_PATH=~/repos/wallpapers/*
SYSTEM_WALLPAPERS_PATH=/usr/share/backgrounds/*
COLORSCHEMES_PATH=~/.dotfiles/colorschemes
CURRENT_COLORSCHEME_PATH=~/.cache/current-colorscheme
WPG_WALLPAPERS_PATH=~/.config/wpg/wallpapers
USED_COLORSCHEMES_PATH=~/.config/colorschemes

usage()
{
  echo "Usage: themer [options] [--]

Options:
  -h                              Display this message
  -u                              Updates the default colorscheme for the current wallpaper
  -e                              Exports the colorscheme for this wallpaper to ~/.dotfiles/colorschemes
  -i <path-to-image>              The path of the image to be used as wallpaper
  -s <saturation>                 Apply saturation to the generated colorscheme (0-1)
  "
  exit
}

get_filename()
{
  echo "${1##*/}"
}

get_filename_without_ext() {
  echo "${1%.*}"
}

escape_colorscheme_path() {
  echo "$(get_filename_without_ext "$(get_filename $1)" | sed "s|/|__|g").json"
}

unescape_colorscheme_path() {
  echo "$(get_filename_without_ext "$(get_filename $1)" | sed "s|__|/|g").jpg"
}

get_current_colorscheme() {
  path="$(cat $CURRENT_COLORSCHEME_PATH)"
  if [ -f "$path" ]; then
    echo "$path"
  else
    exit
  fi
}

export_saved_colorscheme() {
  current_colorscheme=$(get_current_colorscheme)

  if [ "${current_colorscheme%\/*}" != "$HOME/.dotfiles/colorschemes" ]; then
    name=$(get_filename $current_colorscheme)
    mv "$USED_COLORSCHEMES_PATH/$name" "$COLORSCHEMES_PATH/$name"
    set_current_colorscheme "$COLORSCHEMES_PATH/$name"
  else
    export_wpg_json "$(wpg -c)" "$current_colorscheme"
  fi
}

update_saved_colorscheme()
{
  current_colorscheme=$(get_current_colorscheme)

  # We only want to update local colorschemes automatically
  if [ "${current_colorscheme%\/*}" != "$HOME/.dotfiles/colorschemes" ]; then
    export_wpg_json "$(wpg -c)" "$current_colorscheme"
  fi
}

set_current_colorscheme()
{
  echo "$1" > "$CURRENT_COLORSCHEME_PATH"
}

export_wpg_json() {
  wpg -o "$1" "$2"
  sed -i "/wallpaper/d" "$2"
  set_current_colorscheme "$2"
}

generate_colorscheme()
{
  echo "Generating colorscheme for $image"
  wpg_image_path=$WPG_WALLPAPERS_PATH/$(get_filename "$image")
  if [ -f "$wpg_image_path" ]; then
    wpg -d "$wpg_image_path" # Delete the cached colorscheme
  fi
  wpg -a $image # Create a new colosrcheme
  if [ ! -z "$saturation" ]; then
    wpg --sat "$image" "$saturation"
  fi

  echo ""
}

set_colorscheme()
{
  wpg -i "$image" "$1"
  rm "${image}_wal_sample.png" # wpg creates a sample for some reason
}

apply_colorscheme()
{
  echo "Applying colorscheme"
  wpg -s "$1"
}

while getopts "heui:c:s::" opts; do
  case $opts in
    i)
      image="$(pwd)/${OPTARG}" # we want the full path to the wallpaper
      if [ ! -f "$image" ]; then
        echo "Could not use specifed image: $image does not exist"
        exit
      fi
      ;;
    s)
      saturation=${OPTARG}
      ;;
    e)
      export_saved_colorscheme
      exit
      ;;
    u)
      update_saved_colorscheme
      exit
      ;;
    *)
      usage
      ;;
  esac
done
shift $((OPTIND-1))

# If no args are given, show gallery of images from wallpaper repo
if [ -z "$image" ]; then
  image=$(sxiv -t -o $CUSTOM_WALLPAPERS_PATH $SYSTEM_WALLPAPERS_PATH | tail -n1)
  if [ ! -f "$image" ]; then
    echo "Could not use specifed image: $image does not exist"
    exit
  fi
fi

colorscheme_name="$(escape_colorscheme_path "$image")"
colorscheme_path="$COLORSCHEMES_PATH/$colorscheme_name"
local_colorscheme_path="$USED_COLORSCHEMES_PATH/$colorscheme_name"

if [ -f "$colorscheme_path" ]; then
  echo "Found global colorscheme: $colorscheme_path"
  colorscheme_to_use="$colorscheme_path"
elif [ -f "$local_colorscheme_path" ]; then
  echo "Found local colorscheme: $local_colorscheme_path"
  colorscheme_to_use="$local_colorscheme_path"
else
  echo "No saved colorscheme found."
  colorscheme_to_use="null"
fi

if [ "$colorscheme_to_use" = "null" ]; then
  generate_colorscheme
  apply_colorscheme "$image"
  export_wpg_json "$image" "$local_colorscheme_path"
else
  set_colorscheme "$colorscheme_to_use"
  apply_colorscheme "$image"
  export_wpg_json "$image" "$colorscheme_to_use"
fi

